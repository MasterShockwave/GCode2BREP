;if the command is G0 or G1, find the point data and count it as current point.
;	note that if one coord is missing, then this remains the same as the previous value.
;if there is an E command in the code, draw a line from previous point to current point.
;if not, store current point but don't draw line.

FileSelectFile, gcode_file,,, Select G-Code file to convert.

;for each line in gcode
	;does the line begin with G0 or G1?
		;does the line have an E value in it
			;current point = XYZ (read)
			;create line b/w prev point and current point. If previous point is null, then goto Next line (break loop)
		;else
			;current point = XYZ (read)
;previous point = current point
;Next line

readXYZ(lineString) ;returns a 1 x 3 matrix in format {X,Y,Z}
{
Xpos := InStr(lineString, "X",,1) ;find X position
if Xpos = 0
	Goto skipX
StringLen, lineLen, lineString ;find string length
StringRight, Xright, lineString, lineLen - Xpos ;find text right of X position
spacePos := InStr(Xright, " ",,1) ;find space position in this resulting text
StringLeft, X_ptData, Xright, spacePos ;find text left of this space position.
skipX:

;repeat for other cartesian coords
Ypos := InStr(lineString, "Y",,1)
if Ypos = 0
	Goto skipY
StringRight, Yright, lineString, lineLen - Ypos
spacePos := InStr(Yright, " ",,1)
StringLeft, Y_ptData, Yright, spacePos
skipY:

Zpos := InStr(lineString, "Z",,1)
if Zpos = 0
	Goto skipZ
StringLen, lineLen, lineString
StringRight, Zright, lineString, lineLen - Zpos
spacePos := InStr(Zright, " ",,1)
StringLeft, Z_ptData, Zright, spacePos
skipZ:

return XYZdata := [X_ptData, Y_ptData, Z_ptData]
}
